networks:
  datastreaming:
    name: datastreaming
  datastores:
    name: datastores

services:

# REDPANDA COMPONENTS (PLATFORM)
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    container_name: broker
    networks:
      - datastreaming
    command:
      - redpanda start
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --overprovisioned
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --kafka-addr internal://0.0.0.0:29092,external://0.0.0.0:9092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.

      # Keep ports compatible with Confluent Platform Kafka advertised ports for compatibility
      - --advertise-kafka-addr internal://broker:29092,external://localhost:9092
      - --pandaproxy-addr internal://0.0.0.0:18082,external://0.0.0.0:8082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://broker:28082,external://localhost:8082
      - --schema-registry-addr internal://0.0.0.0:28081,external://0.0.0.0:8081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr broker:33145
      - --advertise-rpc-addr broker:33145
      - --set redpanda.auto_create_topics_enabled=true
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

# Create initial topics to support the Snack Order Processor
# When using Flink SQL, these topics need to be created before creating the job.
  create-topics:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    container_name: create-topics
    depends_on:
      - redpanda
    networks:
      - datastreaming
    volumes:
      - ./redpanda-init/create-topics.sh:/usr/bin/create-topics.sh
    entrypoint: ["/bin/sh", "-c", "chmod +x /usr/bin/create-topics.sh && /usr/bin/create-topics.sh"]

  # Kafka Connect
  connect:
    image: cnfldemos/cp-server-connect-datagen:0.6.4-7.6.0
    hostname: connect
    container_name: connect
    networks:
      - datastreaming
      - datastores
    depends_on:
      - redpanda
      - mysql_db_server
      - mongodb_server
    ports:
      - "8083:8083"
    volumes:
      - ./kafka-connectors:/usr/share/confluent-hub-components
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.6.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

# Debezium Component
#  debezium:
#    image: debezium/connect:2.6
#    container_name: debezium
#    networks:
#      - datastreaming
#      - datastores
#    environment:
#      BOOTSTRAP_SERVERS: broker:29092
#      GROUP_ID: 1
#      CONFIG_STORAGE_TOPIC: connect_configs
#      OFFSET_STORAGE_TOPIC: connect_offsets
#    depends_on: [ mysql_db_server, mongodb_server,redpanda]
#    ports:
#      - 8083:8083

# VOLUMES for Redpanda
volumes:
  redpanda: null
